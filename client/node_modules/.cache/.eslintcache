[{"/Users/umbertopalazzo/Dev/memories-project/client/src/index.js":"1","/Users/umbertopalazzo/Dev/memories-project/client/src/App.js":"2","/Users/umbertopalazzo/Dev/memories-project/client/src/components/Form/Form.js":"3","/Users/umbertopalazzo/Dev/memories-project/client/src/components/Posts/Posts.js":"4","/Users/umbertopalazzo/Dev/memories-project/client/src/components/Posts/Post/Post.js":"5","/Users/umbertopalazzo/Dev/memories-project/client/src/styles.js":"6","/Users/umbertopalazzo/Dev/memories-project/client/src/components/Form/styles.js":"7","/Users/umbertopalazzo/Dev/memories-project/client/src/components/Posts/Post/styles.js":"8","/Users/umbertopalazzo/Dev/memories-project/client/src/components/Posts/styles.js":"9","/Users/umbertopalazzo/Dev/memories-project/client/src/reducers/index.js":"10","/Users/umbertopalazzo/Dev/memories-project/client/src/reducers/posts.js":"11","/Users/umbertopalazzo/Dev/memories-project/client/src/actions/posts.js":"12","/Users/umbertopalazzo/Dev/memories-project/client/src/api/index.js":"13","/Users/umbertopalazzo/Dev/memories-project/client/src/constants/actionTypes.js":"14"},{"size":460,"mtime":1617076487362,"results":"15","hashOfConfig":"16"},{"size":1587,"mtime":1617243411219,"results":"17","hashOfConfig":"16"},{"size":3153,"mtime":1617242752611,"results":"18","hashOfConfig":"16"},{"size":783,"mtime":1617077392181,"results":"19","hashOfConfig":"16"},{"size":2155,"mtime":1617242918945,"results":"20","hashOfConfig":"16"},{"size":464,"mtime":1617243540517,"results":"21","hashOfConfig":"16"},{"size":424,"mtime":1616986128397,"results":"22","hashOfConfig":"16"},{"size":962,"mtime":1616986129094,"results":"23","hashOfConfig":"16"},{"size":265,"mtime":1616986127347,"results":"24","hashOfConfig":"16"},{"size":118,"mtime":1616987414111,"results":"25","hashOfConfig":"16"},{"size":485,"mtime":1617245491810,"results":"26","hashOfConfig":"16"},{"size":1467,"mtime":1617245421840,"results":"27","hashOfConfig":"16"},{"size":424,"mtime":1618690196478,"results":"28","hashOfConfig":"16"},{"size":129,"mtime":1617245426286,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"5esqik",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/umbertopalazzo/Dev/memories-project/client/src/index.js",[],["60","61"],"/Users/umbertopalazzo/Dev/memories-project/client/src/App.js",[],"/Users/umbertopalazzo/Dev/memories-project/client/src/components/Form/Form.js",[],"/Users/umbertopalazzo/Dev/memories-project/client/src/components/Posts/Posts.js",[],"/Users/umbertopalazzo/Dev/memories-project/client/src/components/Posts/Post/Post.js",[],"/Users/umbertopalazzo/Dev/memories-project/client/src/styles.js",[],"/Users/umbertopalazzo/Dev/memories-project/client/src/components/Form/styles.js",[],"/Users/umbertopalazzo/Dev/memories-project/client/src/components/Posts/Post/styles.js",[],"/Users/umbertopalazzo/Dev/memories-project/client/src/components/Posts/styles.js",[],"/Users/umbertopalazzo/Dev/memories-project/client/src/reducers/index.js",[],"/Users/umbertopalazzo/Dev/memories-project/client/src/reducers/posts.js",["62"],"import { FETCH_ALL, CREATE, UPDATE, DELETE} from '../constants/actionTypes'\n\n\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload  )\n      case UPDATE:\n      return posts.map((post) => post._id === action.payload._id ? action.payload : post);\n    case FETCH_ALL:\n      return action.payload;\n    case CREATE:\n      return [...posts, action.payload];\n    default:\n      return posts;\n  }\n};\n","/Users/umbertopalazzo/Dev/memories-project/client/src/actions/posts.js",[],"/Users/umbertopalazzo/Dev/memories-project/client/src/api/index.js",[],"/Users/umbertopalazzo/Dev/memories-project/client/src/constants/actionTypes.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":4,"column":1,"nodeType":"69","endLine":17,"endColumn":3},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]